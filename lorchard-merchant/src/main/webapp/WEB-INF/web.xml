<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<display-name>lorchard-merchant</display-name>

	<!-- 设置spring配置文件 一切配置的子文件都是yuansheng开头,这样才能被扫描到 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		classpath:lochard-common.xml
		<!--  
		classpath:yuansheng-shiro.xml
		-->
		classpath:spring-mvc.xml
		classpath:spring-mybatis.xml
		</param-value>
	</context-param>

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>app.root</param-value>
	</context-param>


	<!-- 日志记录 -->
	<context-param>
		<!-- 日志配置文件路径 -->
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param>
		<!-- 日志页面的刷新间隔 -->
		<param-name>log4jRefreshInterval</param-name>
		<param-value>6000</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.util.WebAppRootListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

    <!-- apache shiro 启动 -->
    <!--  
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	-->
	

	<!-- spring-mvc 启动配置 -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- spring-mvc 扫描的 -->
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 用来获取put表单请求 -->
	<filter>  
        <filter-name>httpPutFormFilter</filter-name>  
        <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>  
    </filter>
	
    <filter-mapping>  
        <filter-name>httpPutFormFilter</filter-name>  
        <servlet-name>dispatcher</servlet-name>  
    </filter-mapping>
    
    <!-- http请求满足满足delete,put请求 -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<!-- 备注，这边的名称必须和配置'springmvc'的servlet名称一样 -->
		<servlet-name>dispatcher</servlet-name>
	</filter-mapping>
	
	<welcome-file-list>   
	    <welcome-file>/webpage/user/login.jsp</welcome-file>   
	</welcome-file-list>  
	
	<error-page>
		<error-code>404</error-code>
		<location>/webpage/common/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/webpage/common/500.jsp</location>
	</error-page>

</web-app>
